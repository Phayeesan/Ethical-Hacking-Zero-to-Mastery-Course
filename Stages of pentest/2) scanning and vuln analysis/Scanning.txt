stage 2) Scanning
a)much deeper info gathering
b)focused on technology

goals of scanning
1)to find open ports
2)to find what software and version is running on a open port

port 80-http
port 443-https
port 22-ssh
port 53-dns
port 25-smtp

TCP
Transmission Control Protocol
three way handshake
1) syn-sends request
2)syn/ack- server returns response
3)ack- clients acknowledges response

Udp
user datagram protocol
used when speed is desireable and doesn't check for error
e.g. servers used for live streaming

Parts to scanning
1)discover how many hosts is available and their ip addresses

tools to discover hosts
a) arp 
b) netdiscover -- sudo netdiscover
netstat -nr = to discover router ip


tools for scanning
1)nmap== nmap {ip address}- scan ip to discover open ports on a system
nmap man== nmap manual

nmap scan types
syn scan == -sS (requires root)
tcp connect scan == -sT(does not require root and makes more noise)
udp scan == -sU 
-sF == fin scan

2)discovering OS and software version
for nmap os scan to work, a target must have one port open and one closed
sudo namp -O {IP ADDR}
-O = to discover OS.
hop = distance from scanner

3)detecting service version = -sV requires root
next step-- search for known vulnerabilities for the versions found

--version-intensity- its 7 by default but can be from 0-9, 9 gives
99% correct version but take longer time


-A== one of more aggressive options, don't try on a target without
permission --- enables -sV, -O and nmap scripts


3)filtering ports range
-p =use to specify a specific port 1-65535 more useful
-F =scans first 100 port most used


4)output scan
-oN == print on terminal and save





Firewalls/IDS
Usig decoys to bypass firewall

fragmented packets
-f = uses tiny fragments ip packet to split tcp header to make it hard 
to detect. can be used twice. be careful when using on actual target

--mtu == increase fragment size, must be multiple of 8


using Decoy
-D == 
RND == n, random number of decoy ip. useful for targets outside your network
-D {random number of same local ip} == useful for targets in your network



security evasion with nmap options
-S == spoof your ip but you won't get result back. must specify -Pn
-Pn == assume all host are only
-e == to specify network interface
-g {rnd port} == specify source port, sometimes bypass firewall

timing template{nmap man}
-T 0-paranoid
-T 1-sneky... takes a lot of time to finish

nmap -T -A -F ip_addr -v


naabu
naabu -l subdomainlist.txt -p --exclude-ports 80,443,8080,22,25 -o results.txt

Vulnerability analysis

